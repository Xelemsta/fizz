// Code generated by go-swagger; DO NOT EDIT.

package stats

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// GetV1StatsHandlerFunc turns a function with the right signature into a get v1 stats handler
type GetV1StatsHandlerFunc func(GetV1StatsParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetV1StatsHandlerFunc) Handle(params GetV1StatsParams) middleware.Responder {
	return fn(params)
}

// GetV1StatsHandler interface for that can handle valid get v1 stats params
type GetV1StatsHandler interface {
	Handle(GetV1StatsParams) middleware.Responder
}

// NewGetV1Stats creates a new http.Handler for the get v1 stats operation
func NewGetV1Stats(ctx *middleware.Context, handler GetV1StatsHandler) *GetV1Stats {
	return &GetV1Stats{Context: ctx, Handler: handler}
}

/*
	GetV1Stats swagger:route GET /v1/stats stats getV1Stats

Retrieves the most frequent used request, as well as the number of hits for this request
*/
type GetV1Stats struct {
	Context *middleware.Context
	Handler GetV1StatsHandler
}

func (o *GetV1Stats) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewGetV1StatsParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}
