// Code generated by go-swagger; DO NOT EDIT.

package stats

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"fizz/models"
)

// GetV1StatsOKCode is the HTTP code returned for type GetV1StatsOK
const GetV1StatsOKCode int = 200

/*
GetV1StatsOK Retrieves the most frequent used request, as well as the number of hits for this request

swagger:response getV1StatsOK
*/
type GetV1StatsOK struct {

	/*
	  In: Body
	*/
	Payload *models.MostUsedRequest `json:"body,omitempty"`
}

// NewGetV1StatsOK creates GetV1StatsOK with default headers values
func NewGetV1StatsOK() *GetV1StatsOK {

	return &GetV1StatsOK{}
}

// WithPayload adds the payload to the get v1 stats o k response
func (o *GetV1StatsOK) WithPayload(payload *models.MostUsedRequest) *GetV1StatsOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get v1 stats o k response
func (o *GetV1StatsOK) SetPayload(payload *models.MostUsedRequest) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetV1StatsOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*
GetV1StatsDefault Error handling the request

swagger:response getV1StatsDefault
*/
type GetV1StatsDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetV1StatsDefault creates GetV1StatsDefault with default headers values
func NewGetV1StatsDefault(code int) *GetV1StatsDefault {
	if code <= 0 {
		code = 500
	}

	return &GetV1StatsDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the get v1 stats default response
func (o *GetV1StatsDefault) WithStatusCode(code int) *GetV1StatsDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the get v1 stats default response
func (o *GetV1StatsDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the get v1 stats default response
func (o *GetV1StatsDefault) WithPayload(payload *models.Error) *GetV1StatsDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get v1 stats default response
func (o *GetV1StatsDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetV1StatsDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
